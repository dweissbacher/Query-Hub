# --- Query Metadata ---
# Human-readable name for the query. Will be displayed as the title.
name: Process Injection Detection

# Unique identifier for the query.
id: T1055-process-injection

# Description of what the query does and its purpose.
description: This query detects potential process injection techniques by identifying suspicious cross-process memory operations and unusual process relationships.

# The author or team that created the query.
author: Your Security Team

# The required log sources to run this query successfully in Next-Gen SIEM.
# This will be displayed in the UI to inform the user.
log_sources:
  - Endpoint
  - ProcessRollup2
  - RemoteThreadCreate

# Tags for filtering and categorization.
# Include relevant techniques, tactics, or platforms.
tags:
  - Defense Evasion
  - Process Injection
  - Code Injection
  - MITRE T1055

# --- Query Content ---
# The actual CrowdStrike Query Language (CQL) code.
# Using the YAML block scalar `|` allows for multi-line strings.
cql: |
  #event_simpleName=RemoteThreadCreate
  | join({#event_simpleName=ProcessRollup2 aid=SourceProcessId}, field=[aid, ContextProcessId], include=[ImageFileName], rename=[[ImageFileName, SourceImageFileName]])
  | join({#event_simpleName=ProcessRollup2 aid=TargetProcessId}, field=[aid, ContextProcessId], include=[ImageFileName], rename=[[ImageFileName, TargetImageFileName]])
  | !SourceImageFileName=/(svchost|csrss|winlogon|explorer|lsass)\\.exe/i
  | join({#event_simpleName=UserIdentity}, field=AuthenticationID, include=[UserName])
  | table([aid, UserName, SourceImageFileName, TargetImageFileName, SourceProcessId, TargetProcessId])